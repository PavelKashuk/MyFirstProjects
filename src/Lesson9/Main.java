package Lesson9;
import java.io.IOException;
/*
(Все пункты задания выполнить как последовательные действия одной задачи, а не 6 разных задач.
В сумме получится полноценная программа)
1. Создайте класс User, у которого будет несколько полей(имя, фамилия, почта, пароль, пол, страна).
Соблюдая принципы инкапсуляции реализуйте в нем все необходимые методы/конструкторы для дальнейшей работы.
2. ак же у данного класса должно быть 2 метода:
а). Читать. Принимает текст, ничего не возвращает, выводит сообщение принятое в консоль.
Данный метод необходимо задать как “неизменяемый”.
б). Писать. Ничего не принимает, просто считывает текст с клавиатуры и сохраняет введенный текст в файл.
3. Создать 2 Класса-наследника от User: Support & Admin.
Данные классы должны быть заданы, как классы от которых невозможно больше наследоваться.
Так же для этих классов необходимо определить все необходимые базовые методы для дальнейшей работы.
4. У класса Support определить дополнительный метод-проверки строки.
Этот метод должен на вход принимать строку и проверять наличие этой строки в файле.
Обратно возвращать значение “содержит/не содержит”(подумайте какая переменная лучше всего подходит для данного типа)
5. У класса Admin реализовать другой метод-удаления.
Данный метод на вход получает значение “содержит/ не содержит” и в зависимости от этого значения удаляет файл(если содержит).
6. Далее имея все необходимые классы, зная принцип “динамической диспетчеризации методов”
и команду “instanceof” создайте метод, который будет принимать на вход User(какого-то)
и в зависимости от типа вызывать методы:
User = написать строку
Support = написать строку + проверить наличие этой строки в файле
Admin = написать строку + проверить + удалить файл, если такая строка найдена.
 */

public class Main {
    public static void main(String[] args) throws IOException {
        User user = new User();
        user.read("user");
        user.write();
        Support support = new Support();
        support.checkString("Bob");
        Admin admin = new Admin();
        admin.checkAndDelete(true);
        instanceOfCheck(user);

    }

    private static void instanceOfCheck(User user) throws IOException {
        if (user instanceof Admin) {
            user.write();
            ((Admin) user).checkString("User");
            ((Admin) user).checkAndDelete(true);
            System.out.println("It's an Admin");
        } else if (user instanceof Support) {
                user.write();
                ((Support) user).checkString("User");
                System.out.println("It's a Support");
        } else {
            user.write();
            System.out.println("It's an User");
        }
    }
}